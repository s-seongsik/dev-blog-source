---
layout: post
title: "[Node.js] Express API 서버 구축 - 설치 및 실행" 
tags: [Node.js, Javascript]
categories: [Node.js]
banner:
  image: /assets/images/banners/node_js.png
  opacity: 0.618
  background: "#000"
  height: "100vh"
  min_height: "38vh"
  heading_style: "font-size: 3.25em; font-weight: bold; text-decoration: underline"
  subheading_style: "color: gold"
---

## **사전준비**

***

* [Node.js 설치](/node.js/2021/12/08/Node.js-02/)
* VSCode

<br>

## **설치하기**

***

### **작업 디렉토리 생성**  
```console
$ mkdir myapp
$ cd myapp
```

<br>

### **npm package.json 생성**
`npm init` 명령어를 실행하면 애플리케이션의 이름 및 버전과 같은 몇 가지 정보를 구성하게 되는데 대부분 기본값으로 넘긴다.   
```console
$ npm init
```

`entry point`는 `app.js` 혹은 자유롭게 작성해도된다.(package.json에서 자유롭게 수정가능)   
```
entry point: (index.js)
```

<br>

### **Express 설치**
Express를 임시로 설치하고 `package.json`에 종속 항목 목록에 추가하지 않으려면, `--save` 옵션을 생략한다.
```console
$ npm install express --save
```

> --save 옵션을 통해 설치된 Node 모듈은 package.json 파일 내의 dependencies 목록에 추가된다. 이후 app 디렉토리에서 npm install을 실행하면 종속 항목 목록 내의 모듈이 자동으로 설치된다.


<br>

## **express 실행**

`app.js` 파일을 생성 후 아래의 코드를 작성한다.  
```javascript
const express = require('express')
const app = express()
const port = 3000

app.get('/', (req, res) => {
  res.send('Hello World!')
})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})
```
{: file="app.js"}

아래의 명령어로 app을 실행
```console
$ node app.js
```

[http://localhost:3000/](http://localhost:3000/)로 접속하면 `Hello world!`이 출력될 것이다. 여기까지 했으면 준비완료!

![image](https://user-images.githubusercontent.com/52439201/153122088-de34a19b-903e-4198-9dc2-5a4cfd76deb4.png)

