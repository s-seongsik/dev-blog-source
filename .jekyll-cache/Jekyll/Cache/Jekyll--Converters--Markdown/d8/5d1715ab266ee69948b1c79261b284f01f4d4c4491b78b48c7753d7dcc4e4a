I"\<h2 id="시작하기"><strong>시작하기</strong></h2>

<hr />

<p>Vue.js로 프로젝트를 진행하면서 SSR 웹 페이지를 만들 수 있도록 도와주는 Nuxt.js를 배워보고 싶다는 생각이 들었다. 설명과 이론을 최대한 배제하고 실무용으로 설치부터 배포까지 빠르게 익히기 위한 포스팅이다. <code class="language-plaintext highlighter-rouge">깃허브</code> 정적 호스팅 서비스에 배포 할 <code class="language-plaintext highlighter-rouge">Resume</code> 정적 웹사이트를 만들어 보면서 빠르게 익혀보도록 하자.</p>

<p><br /></p>

<h2 id="nuxtjs-사용하기-위한-전제-조건"><strong>Nuxt.js 사용하기 위한 전제 조건</strong></h2>

<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">node.js</code> 최신 <code class="language-plaintext highlighter-rouge">LTS 버전</code>을 설치하는 것을 권장한다.</li>
  <li>텍스트 편집기, Vetur 확장 기능이 있는 <code class="language-plaintext highlighter-rouge">VSCode</code> 또는 <code class="language-plaintext highlighter-rouge">WebStorm</code> 편집기를 사용하는 것을 권장한다.</li>
  <li>터미널은 <code class="language-plaintext highlighter-rouge">VSCode</code>의 통합 터미널, <code class="language-plaintext highlighter-rouge">WebStorm</code> 터미널 사용을 권장한다.</li>
  <li><code class="language-plaintext highlighter-rouge">npm(v6.1+)</code>을 설치했는지 확인</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">참고로 npm기반으로 프로젝트를 진행한다.</code></p>

<p><br /></p>

<h2 id="설치-방법"><strong>설치 방법</strong></h2>

<hr />

<p>수동설치도 있지만, 명령어를 통해 설치하는 것을 권장한다.</p>

<h3 id="create-nuxt-app-명령어로-설치"><strong>create-nuxt-app 명령어로 설치</strong></h3>
<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">npm init nuxt-app@latest &lt;my-project&gt;</span><span class="w">
</span></code></pre></div></div>

<p>몇 가지 대화형으로 질문을 묻는다. <a href="https://github.com/nuxt/create-nuxt-app/blob/master/README.md">create-nuxt-app 설명서를 참고한다.</a></p>

<p>정적 호스팅(깃허브)에 정적 웹 페이지를 만들 것이기 때문에 아래와 같이 선택한다.</p>

<p><strong>1. Package manager</strong></p>
<ul>
  <li>Npm</li>
</ul>

<p><strong>2. Programming language</strong></p>
<ul>
  <li>JavaScript</li>
</ul>

<p><strong>3. UI framework(UI 프레임워크)</strong></p>
<ul>
  <li>Vuetify</li>
</ul>

<p><strong>4. Nuxt.js modules</strong></p>
<ul>
  <li>Axios - Promise based HTTP client</li>
</ul>

<p><strong>5. Linting tools</strong></p>
<ul>
  <li>ESLint</li>
</ul>

<p><strong>6. Testing framework</strong></p>
<ul>
  <li>None</li>
</ul>

<p><strong>7. Rendering mode(렌더링 모드)</strong></p>
<ul>
  <li>Universal (SSR / Static)</li>
</ul>

<p><strong>8. Deployment target(배포 대상)</strong></p>
<ul>
  <li>Static (Static/JAMStack hosting)</li>
</ul>

<p><strong>9. Development tools(개발도구)</strong></p>
<ul>
  <li>jsconfig.json</li>
</ul>

<p><strong>10. What is your GitHub username(깃허브 아이디)</strong></p>
<ul>
  <li>s-seongsik</li>
</ul>

<p><strong>11. Version control System(버전관리)</strong></p>
<ul>
  <li>Git</li>
</ul>

<p><br /></p>

<h2 id="프로젝트-시작하기"><strong>프로젝트 시작하기</strong></h2>

<hr />
<p>package.json에 다음과 같은 명령어가 있어야 한다.</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"dev"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nuxt"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"build"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nuxt build"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nuxt start"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"generate"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nuxt generate"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="대상-server"><strong>대상: server</strong></h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">nuxt dev</code> - 개발 서버를 시작</li>
  <li><code class="language-plaintext highlighter-rouge">nuxt build</code> - 프로덕션용 웹팩으로 애플리케이션을 빌드하고 최적화</li>
  <li><code class="language-plaintext highlighter-rouge">nuxt start</code> - 프로덕션 서버를 시작한다. (실행 후 nuxt build) Heroku, Digital Ocean 등과 같은 Node.js 호스팅에 사용</li>
</ul>

<h3 id="대상-static"><strong>대상: static</strong></h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">nuxt dev</code> - 개발 서버를 시작</li>
  <li><code class="language-plaintext highlighter-rouge">nuxt generate</code> - 애플리케이션을 빌드하고(필요한 경우) 모든 경로를 HTML 파일로 생성하고 정적으로 <code class="language-plaintext highlighter-rouge">dist/</code> 디렉토리로 내보낸다. (정적 호스팅에 사용)</li>
  <li><code class="language-plaintext highlighter-rouge">nuxt start</code> - <code class="language-plaintext highlighter-rouge">dist/</code> 정적 호스팅 방식과 같은 디렉토리를 제공하여 배포 전 테스트에 적합</li>
</ul>

<p><br /></p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">npm run dev
</span></code></pre></div></div>

<p>아래와 같은 화면이 뜨면 정상적으로 프로젝트가 생성된 것이다.</p>

<p><img src="https://user-images.githubusercontent.com/52439201/150933363-5dec0eb5-687e-4f63-95f9-457a6da32f80.png" alt="image" /></p>

:ET